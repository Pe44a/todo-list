{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-list/./src/task.js","webpack://todo-list/./src/localeStorage.js","webpack://todo-list/./src/domManipulations.js","webpack://todo-list/./src/events.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/render.js"],"sourcesContent":["export const Task = (tittle, description, dueDate, priority) => {\n\n    return{tittle, description, dueDate, priority};\n};","    \n    const saveTask = (task) => {\n        \n        let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n        tasks.push(task);\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n\n    const getTasks = () => {\n\n        let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n\n        return {tasks}\n    };\n\n\n\n    const saveProject = (project) => {\n        \n        let projects = JSON.parse(localStorage.getItem('projects')) || [];\n        project.tasksIndex = [];\n        projects.push(project);        \n\n        localStorage.setItem('projects', JSON.stringify(projects));\n    };\n\n\n    const getProjects = () => {\n\n        let projects = JSON.parse(localStorage.getItem('projects')) || [];\n\n        return {projects}\n    };\n\n\n    // You save last 'tasks' array index, for 'projects' tasksIndex property\n    // Push that task index in tasksIndex\n    const saveTaskIndex = (index) => {\n\n\n        const tasks = getTasks();\n        const projects = getProjects();\n\n        projects.projects[index].tasksIndex.push(tasks.tasks.length);      \n\n        localStorage.setItem('projects', JSON.stringify(projects.projects));\n    };\n\nexport {saveTask, getTasks, saveProject, getProjects, saveTaskIndex};","    const popUp = (() => {\n        \n\n        // Displays form\n        const addForm = (form) => {\n            form.classList.remove('hidden');\n        };\n\n        // Removes form\n        const removeForm = (form) => {\n            form.classList.add('hidden');\n            form.reset();\n        };\n\n        return{addForm, removeForm};\n    })();\n\n\nexport {popUp};","import {Task} from '/src/task.js';\nimport {Project} from '/src/project.js'; \nimport {saveTask, getTasks, saveProject, getProjects, saveTaskIndex} from '/src/localeStorage.js';\nimport {popUp} from '/src/domManipulations.js';\nimport {renderTasks, renderProjects, renderProjectsSelection} from '/src/render.js';\n\n\n\n    const taskSubmitEvent = (()=> {\n        const submitTask = document.querySelector('form.task-form');\n\n\n        submitTask.addEventListener('submit', function(e) {\n            e.preventDefault();\n            console.log('hello');\n\n            const form = document.querySelector('.task-form');\n\n            const title = document.querySelector('#task-title').value;\n            const description = document.querySelector('#task-description').value;\n            const dueDate = document.querySelector('#task-dueDate').value;\n            const priority = document.querySelector('#task-priority').value;\n            const project = document.querySelector('#project-name');\n            const selectedOption = project.options[project.selectedIndex];\n\n            // Creates task\n            const task = Task(title, description, dueDate, priority);\n            saveTask(task);\n\n            if (selectedOption.hasAttribute('data-project-index')) {\n                \n                const optionProjectIndex = selectedOption.dataset.projectIndex;\n\n                saveTaskIndex(optionProjectIndex);\n            }\n\n            popUp.removeForm(form); \n            });\n        })();\n\n\n    const projectSubmitEvent = (()=> {\n        const submitProject = document.querySelector('form.project-form');\n\n\n        submitProject.addEventListener('submit', function(e) {\n            e.preventDefault();\n\n            const form = document.querySelector('.project-form');\n\n            const projectValue = document.querySelector('#project').value;\n\n\n            // Creates task\n            const project = Project(projectValue);\n\n            \n            saveProject(project);\n            popUp.removeForm(form); \n            renderProjects(getProjects());\n            });\n        })();\n\n        \n\n    const taskPopUpEvent = (() => {\n        const popUpTaskButton = document.querySelector('#pop-up-task-form');\n        const removeButtonPopUpTask = document.querySelector('#remove-task-form-button');\n        const form = document.querySelector('.task-form');\n    \n\n        popUpTaskButton.addEventListener('click', function (e) {\n            e.preventDefault()\n            popUp.addForm(form);\n            renderProjectsSelection(getProjects());\n        });\n    \n        removeButtonPopUpTask.addEventListener('click', function (e) {\n            e.preventDefault();\n            popUp.removeForm(form);\n        });\n    \n    })();\n\n\n    const projectPopUpEvent = (() => {\n        const popUpProjectButton = document.querySelector('#pop-up-project-form');\n        const closeProjectButton = document.querySelector('#remove-project-form-button');            \n        const form = document.querySelector('.project-form');\n\n        popUpProjectButton.addEventListener('click', function(e) {\n            e.preventDefault()\n            popUp.addForm(form);\n        });\n\n        closeProjectButton.addEventListener('click', function(e) {\n            e.preventDefault();\n            popUp.removeForm(form);\n        });\n\n\n    })();\n\n    const renderGeneral = (() => {\n        const general = document.querySelector('#general');\n\n        general.addEventListener('click', function(e) {\n            e.preventDefault();\n            renderTasks(getTasks());\n        });\n    })();\n\nexport {taskSubmitEvent, taskPopUpEvent};","export const Project = (project) => {\n\n    return {project};\n};","import {clearTasks} from './domManipulations.js';\n\n    const renderTasks = (tasks) => {\n        const tasksDiv = document.querySelector('.tasks');\n\n        //Clears .tasks before renders\n        tasksDiv.innerHTML = '';\n\n        tasks.tasks.forEach(task => {\n            \n\n            const taskDiv = document.createElement('div');\n            taskDiv.classList.add('task-container');\n            taskDiv.innerHTML = `        \n            <div class=\"task-div checkbox-wrapper\"> <input type=\"checkbox\"> <p>${task.tittle}</p> <p>${task.dueDate}</p> </div>\n            <div class=\"task-div\"> <a href=\"\" class=\"edit-button\">Edit</a> <a href=\"\" class=\"delete-button\">Delete</a> </div>\n            `;\n            tasksDiv.appendChild(taskDiv);\n        });\n    };\n\n    const renderProjects = (projects) => {\n        const projectsDiv = document.querySelector('.projects');\n\n        //Clears .projects before renders\n        projectsDiv.innerHTML = '';\n\n        projects.projects.forEach( project => {\n            const projectLink = document.createElement('a');\n            projectLink.href = '';\n            projectLink.classList.add('project');\n            projectLink.innerHTML = `${project.project}`;\n\n            projectsDiv.appendChild(projectLink);\n        });\n    };\n    \n\n    const renderProjectsSelection= (projects) => {\n        const projectsSelections = document.querySelector('#project-name');\n\n        //Clears .projects before renders\n        projectsSelections.innerHTML = '';\n\n\n        //Adds default selection 'General'\n        const defaultSelection = document.createElement('option');\n        defaultSelection.innerHTML = 'General';\n        projectsSelections.appendChild(defaultSelection);\n\n\n        projects.projects.forEach( (project, index) => {\n            const projectSelection = document.createElement('option');\n            projectSelection.innerHTML = `${project.project}`;\n            projectSelection.dataset.projectIndex = index;\n            projectsSelections.appendChild(projectSelection);\n        });\n    };\n\n\nexport {renderTasks, renderProjects, renderProjectsSelection};"],"names":["getTasks","tasks","JSON","parse","localStorage","getItem","getProjects","projects","popUp","form","classList","remove","add","reset","document","querySelector","addEventListener","e","preventDefault","console","log","title","value","description","dueDate","priority","project","selectedOption","options","selectedIndex","task","tittle","Task","push","setItem","stringify","saveTask","hasAttribute","index","tasksIndex","length","saveTaskIndex","dataset","projectIndex","saveProject","projectsDiv","innerHTML","forEach","projectLink","createElement","href","appendChild","renderProjects","popUpTaskButton","removeButtonPopUpTask","projectsSelections","defaultSelection","projectSelection","renderProjectsSelection","popUpProjectButton","closeProjectButton","tasksDiv","taskDiv","renderTasks"],"sourceRoot":""}
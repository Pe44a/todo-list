{"version":3,"file":"main.js","mappings":"mBAAO,MCAGA,EAAY,MACd,MAAMC,EAAOC,SAASC,cAAc,cAapC,MAAM,CAACC,QAVS,KACZH,EAAKI,UAAUC,OAAO,SAAS,EASnBC,WALG,KACfN,EAAKI,UAAUG,IAAI,UACnBP,EAAKQ,OAAO,EAInB,EAfiB,GCMKP,SAASC,cAAc,kBAG/BO,iBAAiB,UAAU,SAASC,GAC3CA,EAAEC,iBCTO,CAACC,IAEd,IAAIC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GACzDJ,EAAMK,KAAKN,GAEXI,aAAaG,QAAQ,QAASL,KAAKM,UAAUP,GAAO,EDehDQ,CFnBF,CAACC,OEUerB,SAASC,cAAc,eAAeqB,MFV7CC,YEWavB,SAASC,cAAc,qBAAqBqB,MFX5CE,QEYJxB,SAASC,cAAc,iBAAiBqB,MFZ3BG,SEaZzB,SAASC,cAAc,kBAAkBqB,QAO1DxB,EAAUO,YACV,IAIe,MACnB,MAAMqB,EAAkB1B,SAASC,cAAc,qBACzC0B,EAAwB3B,SAASC,cAAc,uBACxCD,SAASC,cAAc,cAGpCyB,EAAgBlB,iBAAiB,SAAS,SAAUC,GAChDA,EAAEC,iBACFZ,EAAUI,SACd,IAEAyB,EAAsBnB,iBAAiB,SAAS,SAAUC,GACtDA,EAAEC,iBACFZ,EAAUO,YACd,GAEH,EAhBsB,GAmBHL,SAASC,cAAc,YAE/BO,iBAAiB,SAAS,SAASC,GACvCA,EAAEC,iBE/CU,CAACE,IACjB,MAAMgB,EAAW5B,SAASC,cAAc,UAGxC2B,EAASC,UAAY,GAEjBjB,EAAMA,MAAMkB,SAAQnB,IAGhB,MAAMoB,EAAU/B,SAASgC,cAAc,OACvCD,EAAQ5B,UAAUG,IAAI,kBACtByB,EAAQF,UAAY,gGACiDlB,EAAKU,iBAAiBV,EAAKa,0KAGhGI,EAASK,YAAYF,EAAQ,GAC/B,EFgCFG,CCtCG,CAACtB,MAFIC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IDyCzD,G","sources":["webpack://todo-list/./src/task.js","webpack://todo-list/./src/domManipulations.js","webpack://todo-list/./src/events.js","webpack://todo-list/./src/localeStorage.js","webpack://todo-list/./src/render.js"],"sourcesContent":["export const Task = (tittle, description, dueDate, priority) => {\n\n    return{tittle, description, dueDate, priority};\n};","    const taskPopUp = (() => {\n        const form = document.querySelector('.task-form');\n\n        // Displays form\n        const addForm = () => {\n            form.classList.remove('hidden');\n        };\n\n        // Removes form\n        const removeForm = () => {\n            form.classList.add('hidden');\n            form.reset();\n        };\n\n        return{addForm, removeForm};\n    })();\n\n\n\nexport {taskPopUp};","import {Task} from '/src/task.js'; \nimport {saveTask, getTasks} from '/src/localeStorage.js';\nimport {taskPopUp} from '/src/domManipulations.js';\nimport {renderTasks} from '/src/render.js';\n\n    const createTaskEvent = (()=> {\n        const submitTask = document.querySelector('form.task-form');\n\n\n        submitTask.addEventListener('submit', function(e) {\n            e.preventDefault();\n\n            const title = document.querySelector('#task-title').value;\n            const description = document.querySelector('#task-description').value;\n            const dueDate = document.querySelector('#task-dueDate').value;\n            const priority = document.querySelector('#task-priority').value;\n\n            // Creates task\n            const task = Task(title, description, dueDate, priority);\n\n            \n            saveTask(task);\n            taskPopUp.removeForm(); \n            });\n        })();\n\n\n    const taskPopUpEvent = (() => {\n        const popUpTaskButton = document.querySelector('#pop-up-task-form');\n        const removeButtonPopUpTask = document.querySelector('#remove-form-button');\n        const form = document.querySelector('.task-form');\n    \n\n        popUpTaskButton.addEventListener('click', function (e) {\n            e.preventDefault()\n            taskPopUp.addForm();\n        });\n    \n        removeButtonPopUpTask.addEventListener('click', function (e) {\n            e.preventDefault();\n            taskPopUp.removeForm();\n        });\n    \n    })();\n\n    const renderGeneral = (() => {\n        const general = document.querySelector('#general');\n\n        general.addEventListener('click', function(e) {\n            e.preventDefault();\n            renderTasks(getTasks());\n        });\n    })();\n\nexport {createTaskEvent, taskPopUpEvent};","    \n    const saveTask = (task) => {\n        \n        let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n        tasks.push(task);\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    const getTasks = () => {\n        let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n\n        return {tasks}\n    };\n\n\nexport {saveTask, getTasks};","import {clearTasks} from './domManipulations.js';\n\n    const renderTasks = (tasks) => {\n        const tasksDiv = document.querySelector('.tasks');\n\n        //Clears .tasks before renders\n        tasksDiv.innerHTML = '';\n\n            tasks.tasks.forEach(task => {\n                \n\n                const taskDiv = document.createElement('div');\n                taskDiv.classList.add('task-container');\n                taskDiv.innerHTML = `        \n                <div class=\"task-div checkbox-wrapper\"> <input type=\"checkbox\"> <p>${task.tittle}</p> <p>${task.dueDate}</p> </div>\n                <div class=\"task-div\"> <a href=\"\" class=\"edit-button\">Edit</a> <a href=\"\" class=\"delete-button\">Delete</a> </div>\n                `;\n                tasksDiv.appendChild(taskDiv);\n            });\n    };\n\nexport {renderTasks};"],"names":["taskPopUp","form","document","querySelector","addForm","classList","remove","removeForm","add","reset","addEventListener","e","preventDefault","task","tasks","JSON","parse","localStorage","getItem","push","setItem","stringify","saveTask","tittle","value","description","dueDate","priority","popUpTaskButton","removeButtonPopUpTask","tasksDiv","innerHTML","forEach","taskDiv","createElement","appendChild","renderTasks"],"sourceRoot":""}